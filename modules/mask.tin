#nop mask.tin
/*
	Script for handling corpses with or without The mask of Gemino Mortis.
	This script allows the mask to be active or inactive, only reacting to mask
	events when the reclaim (mu) script is running. 
	Use the mu alias from update_status when your desired conditions are met to
	trigger a reclaim. Can be easily modified to suit your guild preferences.

	Variables:
	$mask_on			- 0: off, 1: own mask, 2: anyone's mask
	$recently_reclaimed	- prevent simultaneous reclaims and allow for GP to settle
	$mask_check			- set to 1, if 1 after 3s, mask failed, reclaim
	$ses_name			- your name from Inix's tintin setup
	$guild				- your guild name from Inix's tintin setup

	Usage:
	mask on			- Trigger from your mask only. Glyph is forced off when not reclaiming.
	mask all		- Trigger from anyone's mask. Manage the glyph manually.
	mask off		- Default, reclaim instantly.
	mask			- Show the mask and glyph status

	Example code for update_status (or hp trigger, etc):
	#if {($recently_reclaimed == 0) && ($enemy[hp] > 1) && ($my[gp1][perc] < 40)} {
		#if {$mask_module} {
			#delay {reclaim} {mu} {0.1}
		} {
			#delay {reclaim} {
				#send !recharge;
				#send !unwrap;
				#send !reclaim
			} {0.1}
		}
	};
*/
#class {mask} {kill}
#class {mask} {open}

#variable {mask_module} {1}
#variable {mask_on} {0}
#variable {recently_reclaimed} {0}
#variable {mask_check} {0}
#variable {mask_glyph_state} {unknown}

#alias {mask}
{
    #switch {"%1"} {
        #case "on" {
            #variable {mask_on} {1};
            #echo {<ecf>You will use your mask only. Glyph usage is automatic.<088>};
			#if {"$mask_glyph_state" == "unknown" || "$mask_glyph_state" == "on"} {
				#nop make sure the glph is off as the default mask on state;
				#send !trace glyph
			}
        };
        #case "off" {
            #variable {mask_on} {0};
            #echo {<ecf>You will not use any masks, and will reclaim instantly.<088>};
			#if {"$mask_glyph_state" == "unknown" || "$mask_glyph_state" == "on"} {
				#nop toggle the glyph to ensure it's off;
				#send !trace glyph
			}
        };
        #case "all" {
            #variable {mask_on} {2};
            #echo {<ecf>You will now use anyone's mask. Glyph usage is manual.<088>};
			#if {"$mask_glyph_state" == "unknown"} {
				#nop get the glyph state, will throw errors if you have no mask - ignore;
				#send !trace glyph;
				#send !trace glyph
			}
        };
        #default {
			#local {masktrigger} {};
			#local {maskglyph} {};
            #if {$mask_on == 1} {
                #variable {masktrigger} {You will trigger from your mask only}
            }; #elseif {$mask_on == 2} {
                #variable {masktrigger} {You will trigger from anyone's mask}
            }; #else {
                #variable {masktrigger} {You will use corpse(s) instantly,}
            };
			#echo {<ecf>%s and the glyph is %s.<088>} {$masktrigger} {$mask_glyph_state}
        }
    }
}

#action {^The mask shines brightly}
{
	#variable {mask_glyph_state} {on};
	#if {$mask_on == 0} {
		#nop mask is off, turn glyph off;
		#send !trace glyph
	}; #elseif {$mask_on == 1 && $mask_check == 0} {
		#nop mask is on, not reclaiming, turn glyph off;
		#send !trace glyph
	}
}

#action {^The mask emits a dull glow}
{
	#variable {mask_glyph_state} {off};
	#if {$mask_check == 1} {
		#nop the glyph should be active during a reclaim;
		#send !trace glyph
	}
}

#action {^{You keep \*?The mask of Gemino Mortis.*\(worn}}
{
	#nop automatically turn the mask on when you keep it and it's worn;
	mask on
}

#action {^You have no mask.}
{
	#variable {mask_on} {0};
	#variable {mask_glyph_state} {unknown}
}

#nop use this alias to either manually use a corpse or 
#alias {mu}
{
	#if {$recently_reclaimed == 1} {
		#echo {<ecf>You are still busy reclaiming!<088>}
	} {
		#if {$corpses[inventory] + $corpses[coffin] + $corpses[freezer] + $corpses[cooler] > 0} {
			#variable recently_reclaimed 1;
			#if {$corpses[inventory] > 0} {
				#send !drop corpse;
				@guild_reclaim{};
				#delay {6} {finish_reclaim}
			} {
				#if {$mask_on != 0} {
					#variable {mask_check} {1};
					#if {$mask_on == 1} {#send !trace glyph};
					@select_corpse{};
					#delay {3} {
						#if {$mask_check} {
							#variable {mask_check} {0};
							#if {$mask_on == 1} {#send !trace glyph};
							@guild_reclaim{}
						};
						#delay {3} {finish_reclaim}
					}
				} {
					@select_corpse{};
					@guild_reclaim{};
					#delay {6} {finish_reclaim}
				}
			}
		}
	}
}

#alias {finish_reclaim}
{
	#variable {recently_reclaimed} {0};
	#echo {<ecf>Finished reclaim.<088>}
}

#action {^%1's eyes glow bright green upon the fallen}
{
	#local {lname} {};
	#format {lname} {%l} {%1};
	#if {$mask_check == 1 && (($mask_on == 1 && "$lname" == "$ses_name") || $mask_on == 2)} {
		#variable {mask_check} {0};
		#if {$mask_on == 1} {#send !trace glyph};
		@guild_reclaim{};
		@guild_reclaim{};
	} {
		#variable {mask_check} {0}
	}
}

#action {^%1's eyes glow a sickly green upon the fallen}
{
	#local {lname} {};
	#format {lname} {%l} {%1};
	#if {$mask_check == 1 && (($mask_on == 1 && "$lname" == "$ses_name") || $mask_on == 2)} {
		#variable {mask_check} {0};
		#if {$mask_on == 1} {#send !trace glyph};
		@guild_reclaim{};
	} {
		#variable {mask_check} {0}
	}
}

#function {select_corpse}
{
	#if {$corpses[coffin] > 0} {
		#variable {result} {unwrap}
	}; #elseif {$corpses[freezer] > 0} {
		#variable {result} {deslab}
	}; #else {
		#variable {result} {uncooler corpse}
	}
}

#function {guild_reclaim}
{
	#nop add or update your guild-specific corpse handling here;
	#switch {"$guild"} {
		#case "gentech" {
			#variable {result} {recharge;reclaim}
		};
		#case "necromancer" {
			#variable {result} {qtrance preserve get/absorb}
		};
		#case "fremen" {
			#variable {result} {reclaim}
		};
		#case "knight" {
			#variable {result} {bury corpse}
		};
		#case "cyborg" {
			#variable {result} {decompose corpse}
		};
		#case "changeling" {
			#variable {result} {absorb}
		};
		#case "angel" {
			#variable {result} {disperse}	
		};
		#case "bard" {
			#variable {result} {perform dirge}	
		};
		#case "jedi" {
			#variable {result} {absorb energy}	
		};
		#case "monk" {
			#variable {result} {study corpse}	
		};
		#case "priest" {
			#variable {result} {offer corpse}	
		};
		#case "bladesinger" {
			#variable {result} {salute corpse}	
		};
		#case "mage" {
			#variable {result} {cast corpse blast}	
		};
		#default {
			#echo {** Unhandled guild type in reclaim.tim! **};
			#bell;
			#variable {result} { }
		}
	}
};

#class {mask} {close}
