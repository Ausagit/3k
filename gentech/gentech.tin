#nop gentech.tin
/*
	Modified from Inix's original file to streamline the mip data, and extent functionality via
	the includable Gentech modules: gen_bias.tin, gen_tactica.tin, gen_pack.tin, gen_leech.tin
	Also uses the mask.tin and scalers.tin generic modules.
*/

#nop read the files outside of the gentech class to prevent things going boom when you reload them individually
#read {.tt/3k/guilds/gen_bias.tin}
#read {.tt/3k/guilds/gen_tactical.tin}
#read {.tt/3k/guilds/reclaim.tin}
#read {.tt/3k/guilds/gen_pack.tin}
#read {.tt/3k/guilds/gen_leech.tin}
#read {.tt/3k/guilds/gen_onkill.tin}

#class {gentech} {kill}
#class {gentech} {open}

#variable {guild} {gentech}

#variable {gentech_module} {1}
#variable {corpsetrig_on} {1};
#variable {gentech[gxp][lasttnl]} {0}
#variable {gentech[rc][last]} {0}
#variable {gentech[gxp][round]} {0}
#variable {gentech[rc][round]} {0}

#gag {^[[ The Central Power Core is reaching its maximum capacity}
#gag {^[[ Central Power Core at Maximal Levels}
#gag {^[[     Aborting Remote Transfer}
#gag {^[[[ **WARNING**   PANIC HEAL ACTIVATED}
#gag {^[[ <WARNING> :: Power Unit Storage At Minimum}
#gag {^[> Power Unit Recharge Complete}
#gag {^[>      Reclamation Complete}
#gag {^>$}
#gag {^Your genetic arm strike}
#gag {^Your great speed allows}

#nop supplements to 'cbrief on mo'
#gag {^%* tickled %* in the stomach}
#gag {^%* struck but did no damage}

/*
	Add guildsetup as the first command in a stepper botpath to set states for the dungeon/area.
	Use it to change gear, scaler, biases, etc. Call the .. alias when complete
*/
#alias {guildsetup}
{
	#nop make sure dungeons are cleared;
	dungeons;
	#nop switch scaler using the scaler module;
	#if {$scalers_module} {
		scalers run
	};
	#nop switch bias using the gen_bias module, it will .. when bias change is finished or not required;
	#if {$gen_bias_module} {
		bias run
	} {
		#delay {2} {..}
	}
}

/*
	Miscellaneous
*/
#action {^Out of nowhere a crazed hockey fan leaps towards the Cup} {#send !recharge;#send !reclaim}
#action {^[[ You have advanced to echelon [%1] in your order in the Gen-High Council. ]]} {update_chat %0}

#alias {cpc}
{
	#if {"%1" == "" || %1 == 0} {
		#send !repeat off;
	} {
		#send !repeat combat/conduit %1/0/1
	}
}

#alias {genmodules}
{
	#echo {<fac>You are using the following gentech modules:\ngentech: %d\ngen_tactical: %d\ngen_leech: %d\ngen_bias: %d\ngen_pack: %d\ngen_onkill: %d\nreclaim: %d\nscalers: %d<088>} {$gentech_module} {$gen_tactical_module} {$gen_leech_module} {$gen_bias_module} {$gen_pack_module} {$gen_onkill_module} {$reclaim_module} {$scalers_module}
}


/*
	Corpse trigger & functions
*/
#alias {cte} {#variable {corpsetrig_on} {1};#echo {<bfb>Corpse trigger enabled.<088>}}
#alias {ctp} {#variable {corpsetrig_on} {2};#echo {<bfb>Corpse trigger enabled (party).<088>}}
#alias {ctd} {#variable {corpsetrig_on} {0};#echo {<bfb>Corpse trigger disabled.<088>}}

#action {^=K=%1 dealt the killing blow to} {corpsetrig}

#alias {corpsetrig}
{
	#nop wrap/slab/reclaim handled by ktrig;
	#if {$corpsetrig_on} {
		#if {$corpsetrig_on == 2} {
			#send !divvy coins;
		} {
			#send !get coins;
		};
		#if {$gen_pack_module} {
			stacknext
		};
	} {
		#send !divvy coins;
		#delay {0.5} {#echo {<bfb>Corpse trigger is off.<088>}}
	};
	#if {$gen_tactical_module} {
		tac run
	};
	#if {$gen_onkill_module} {
		onkillrun
	}
}

/*
	Powerfeed & corpse leeching
*/
#action {^%1 pokes you in the ribs}
{
	#if {@storedcorpses{} > 4 && $my[gp1][current] > 3000} {
		#send !powerfeed @tolower{%1}
	}
}

#action {^That player is not a member of the Gentech Guild}
{
	#if {@storedcorpses{} > 5 && $my[gp1][current] > 3000} {
		#if {$corpses[coffin] > 0} {
			#send !unwrap
		}; #elseif {$corpses[freezer] > 0} {
			#send !deslab
		}; #else {
			#send !uncooler corpse
		}
	}
}

/*
	Helper functions
*/
#function {tolower}
{
	#format {result} {%l} {%1}
}
#function {statuscolour}
{
	#switch {%1} {
		#case 0 {
			#variable {result} {<108>}
		};
		#case 1 {
			#variable {result} {<028>}
		};
		#default {
			#variable {result} {<faf>}
		}
	}
}

#function {storedcorpses}
{
	#math {result} {$corpses[inventory] + $corpses[coffin] + $corpses[freezer] + $corpses[cooler]}
}

/*
	Update status on screen, triggered from mip updates.
	It can be called multiple times per round.
*/
#alias {update_status}
{	
	#nop Calculate GXP and RC per round;
	#if {$gentech[gxp][round] > 1000 || $gentech[gxp][round] < 0} {
		#variable {gentech[gxp][round]} {0}
	};
	#if {$gentech[rc][round] > 1000 || $gentech[rc][round] < 0} {
		#variable {gentech[rc][round]} {0}
	};

	#if {$gentech[gxp][lasttnl] != $gentech[gxp][tnl]} {
		#math {gentech[gxp][round]} {$gentech[gxp][lasttnl] - $gentech[gxp][tnl]};
		#variable {gentech[gxp][lasttnl]} {$gentech[gxp][tnl]}
	};
	#if {$gentech[rc][last] != $gentech[rc][num]} {
		#math {gentech[rc][round]} {$gentech[rc][num] - $gentech[rc][last]};
		#variable {gentech[rc][last]} {$gentech[rc][num]}
	};
	#math {gentech[gxprc]} {$gentech[gxp][round] + $gentech[rc][round]};

	#nop recharge PU from SPU - adjust to suit your specific requirements;
	#nop at order 10, recharge when (SPU > 0) and (PU < 6300 or (SPU > 3915 and PU < 8730));
	#if {($my[gp2][current] > 0) && (($my[gp1][current] / $my[gp1][max] < 0.7) || (($my[gp2][current] / $my[gp2][max] > 0.87) && ($my[gp1][current] / $my[gp1][max] < 0.97)))} {
		#delay {recharge} {#send !recharge} {0.1}
	};

	#nop Refill SPU from corpses;
	#if {($recently_reclaimed == 0) && ($leech_on == 0) && ($enemy[hp] > 5) && ($my[gp1][current] / $my[gp1][max] < 0.4)} {
		#nop the mu alias is part of the mask.tin module, replace with recharge & reclaim if not using it;
		#if {$reclaim_module} {
			#delay {reclaim} {mu} {0.1}
		} {
			#delay {reclaim} {
				#send !recharge;
				#send !reclaim
			} {0.1}
		}
	};

	#NOP Build HP Bars;
	#if {"$cooler" == "on" || $corpses[cooler] > 0} {
			#format {sb1_cooler} {%+2s} {$corpses[cooler]};
	} {
			#var {sb1_cooler} {}
	};
	#if {"$freezer" == "on" || $corpses[freezer] > 0} {
			#format {sb2_freezer} {%+2s} {$corpses[freezer]};
	} {
			#var {sb2_freezer} {}
	};

	#var	{my[hp][graph]}		{@graph{$my[hp][current];$my[hp][max]}};
	#var	{my[sp][graph]}		{@graph{$my[sp][current];$my[sp][max]}};
	#var	{my[gp1][graph]}	{@graph{$my[gp1][current];$my[gp1][max]}};
	#var	{enemy[graph]}		{@graph{$enemy[hp];100}};
	#format {hp}			{%+4s} {@colscale{$my[hp][current];$my[hp][max]}};
	#format {hp_max}		{%+4s} {<128>$my[hp][max]<088>};
	#format {sp}			{%+4s} {@colscale{$my[sp][current];$my[sp][max]}};
	#format {sp_max}		{%+4s} {<128>$my[sp][max]<088>};
	#format {pu}			{%+4s} {@colscale{$my[gp1][current];$my[gp1][max]}};
	#format {pu_max}		{%+4s} {<128>$my[gp1][max]<088>};
	#format {spu}			{%+4s} {<128>$my[gp2][current]<088>};
	#format {gxpdetails}	{%+4s} {$gentech[gxprc]};
	#format {ehealth}		{%+4s} {@colscale{$enemy[hp];100}};
	#if {"$gentech[illum]" == "ON"} {#variable illumcol <138>} {#variable illumcol <108>};
	#if {"$gentech[bias][mode]" == "Locked"} {#variable biasmode +} {#variable biasmode -};
		
	#format {gstatus1} {<130>CPC:<088><230>%+5s<088> <168>G2N:<088><268>%s<088> <168>RC:<088><268>%s<088> <128>TS:<088><228>%s/%s(%s)<088>} {$gentech[cpc][current]} {$gentech[gxp][tnl]} {$gentech[rc][num]} {$gentech[ts][current]} {$gentech[ets]} {$gentech[reset]};
	#format {gstatus2} {<158>CB:<088><258>%s/%s%s<088> <148>EF:<088><248>%s%.1s<088> <178>ED:<088>%s%.1s <fca>OK:<088><eba>%s<088>} {$gentech[bias][atk]} {$gentech[bias][def]} {$biasmode} {$gentech[efield][num]} {$gentech[efield][unit]} {$gentech[edna][num]} {$gentech[edna][unit]} {$onkill};
	#format {gstatus3} {<088>%sI %sC %sM %sT %sL %sS %sB<088>} {$illumcol} {@statuscolour{$corpsetrig_on}} {@statuscolour{$mask_on}} {@statuscolour{$tactical_on}} {@statuscolour{$leech_on}} {@statuscolour{$scalers_enabled}} {@statuscolour{$biases_enabled}};

    #format {corpses[inventory]} {%+2s} {$corpses[inventory]};
    #format {corpses[truck]} {%+2s} {$corpses[truck]};
    #format {corpses[coffin]} {%+2s} {$corpses[coffin]};
    #format {corpses[freezer]} {%+2s} {$corpses[freezer]};

	#showme {$gstatus1 $gstatus2} {-6};
	#showme {HP:${hp}/${hp_max} SP:${sp}/${sp_max} PU:${pu}/${pu_max}(${spu}) <168>G:<088><268>${gxpdetails}<088> <088>S:<088>$gstatus3} {-4};
	#showme {H:${my[hp][graph]} S:${my[sp][graph]} PU:${my[gp1][graph]}      E:${ehealth} <088>C:<088>${corpses[inventory]} ${corpses[coffin]} ${sb2_freezer} ${sb1_cooler}<088>} {-3};
}

#class {gentech} {close}
